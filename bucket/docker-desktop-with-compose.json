{
    "version": "184744",
    "description": "Docker Desktop. Open platform for developers and sysadmins to build, ship, and run distributed applications, whether on laptops, data center VMs, or the cloud.",
    "homepage": "https://www.docker.com",
    "license": {
        "identifier": "Apache-2.0",
        "url": "https://github.com/moby/moby/blob/master/LICENSE"
    },
    "notes": [
        "Conditions refer to the:",
        "https://learn.microsoft.com/en-us/windows/wsl/install",
        "https://docs.docker.com/desktop/install/windows-install",
    ],
    "architecture": {
        "64bit": {
            "url": "https://desktop.docker.com/win/main/amd64/184744/Docker%20Desktop%20Installer.exe",
            "hash": "e832d4c2c99300436096b2e990220068e69ede845137a9dd63eff0a51e8a14e9"
        }
    },
    "installer": {
        "args": [
            "install",
            "--quiet",
            "--accept-license",
            "--backend=wsl-2",
            "--installation-dir=$dir\\docker"
        ]
    },
    "pre_install": [
        "if(is_admin) {",
        "    if((Get-WindowsOptionalFeature -FeatureName Microsoft-Hyper-V-All -Online).State -eq 'Disabled') {",
        "        dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart /loglevel:4 /logpath:$dir",
        "        dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart /loglevel:4 /logpath:$dir",
        "    }",
        "}else{",
        "       Write-host \"Please run as an administrator\" -ForegroundColor green",
        "       exit",
        "}"
    ],
    "post_install": [
        "function Create-Junction { param ([string]$runtimeCache, [string]$runtimeCachePersist)",
        "  if (-not (Test-Path $runtimeCache)) { return }",
        "  if (Test-Path $runtimeCachePersist) {",
        "    Remove-Item $runtimeCache -Force -Recurse -ErrorAction SilentlyContinue",
        "    New-Item -Type Junction -Path $runtimeCache -Target $runtimeCachePersist | Out-Null",
        "  } else {",
        "    mkdir $runtimeCache -ErrorAction SilentlyContinue",
        "    Move-Item $runtimeCache $runtimeCachePersist -Force",
        "    New-Item -Type Junction -Path $runtimeCache -Target $runtimeCachePersist | Out-Null",
        "  }",
        "}",
        "foreach ($folder in @('.docker', 'Docker', 'Docker Desktop')) {",
        "  Create-Junction -runtimeCache \"$env:USERPROFILE\\$folder\" -runtimeCachePersist \"$persist_dir\\USERPROFILE\\$folder\"",
        "  Create-Junction -runtimeCache \"$env:LOCALAPPDATA\\$folder\" -runtimeCachePersist \"$persist_dir\\LOCALAPPDATA\\$folder\"",
        "  Create-Junction -runtimeCache \"$env:APPDATA\\$folder\" -runtimeCachePersist \"$persist_dir\\APPDATA\\$folder\"",
        "}"
    ],
    "shortcuts": [
        [
            "docker\\Docker Desktop.exe",
            "Docker Desktop"
        ]
    ],
    "env_add_path": "docker\\resources\\bin",
    "checkver": {
        "url": "https://docs.docker.com/desktop/release-notes/",
        "regex": "https://desktop.docker.com/win/main/amd64/([\\d.]+)/Docker%20Desktop%20Installer.exe"
    },
    "autoupdate": {
        "url": "https://desktop.docker.com/win/main/amd64/$version/Docker%20Desktop%20Installer.exe",
        "hash": {
            "url": "https://desktop.docker.com/win/main/amd64/$version/checksums.txt",
            "regex": "$.sha256"
        }
    }
}
